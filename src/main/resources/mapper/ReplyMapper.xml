<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.examination.dao.ReplyMapper">
    <resultMap id="BaseResultMap" type="com.example.examination.entity.Reply">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="answer" jdbcType="VARCHAR" property="answer"/>
        <result column="correct" jdbcType="VARCHAR" property="correct"/>
        <result column="error" jdbcType="VARCHAR" property="error"/>
        <result column="paper_id" jdbcType="INTEGER" property="paperId"/>
        <result column="publish_id" jdbcType="INTEGER" property="publishId"/>
        <result column="submit_ts" jdbcType="VARCHAR" property="submitTs"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, answer, correct, error, paper_id, publish_id, submit_ts, user_id, score
  </sql>
    <select id="selectByPublishIdAndUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reply where user_id=#{userId} and publish_id=#{publishId}
    </select>
    <select id="count" resultType="Integer">
        select count(*) from reply
        <where>
            <if test="paperId!=null">paper_id=#{paperId}</if>
            <if test="userId!=null">and user_id=#{userId}</if>
            <if test="publishId!=null">and publish_id=#{publishId}</if>
        </where>
    </select>
    <select id="select" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reply
        <where>
            <if test="paperId!=null">paper_id=#{paperId}</if>
            <if test="userId!=null">and user_id=#{userId}</if>
            <if test="publishId!=null">and publish_id=#{publishId}</if>
        </where>
        order by id desc
        <if test="pageNo != null and pageSize != null">
            limit ${(pageNo-1)*pageSize},#{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from reply
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.examination.entity.Reply">
    insert into reply (id, answer, correct, 
      error, paper_id, publish_id, 
      submit_ts, user_id, score
      )
    values (#{id,jdbcType=INTEGER}, #{answer,jdbcType=VARCHAR}, #{correct,jdbcType=VARCHAR}, 
      #{error,jdbcType=VARCHAR}, #{paperId,jdbcType=INTEGER}, #{publishId,jdbcType=INTEGER}, 
      #{submitTs,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.examination.entity.Reply">
        insert into reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="correct != null">
                correct,
            </if>
            <if test="error != null">
                error,
            </if>
            <if test="paperId != null">
                paper_id,
            </if>
            <if test="publishId != null">
                publish_id,
            </if>
            <if test="submitTs != null">
                submit_ts,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="score != null">
                score,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="correct != null">
                #{correct,jdbcType=VARCHAR},
            </if>
            <if test="error != null">
                #{error,jdbcType=VARCHAR},
            </if>
            <if test="paperId != null">
                #{paperId,jdbcType=INTEGER},
            </if>
            <if test="publishId != null">
                #{publishId,jdbcType=INTEGER},
            </if>
            <if test="submitTs != null">
                #{submitTs,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.examination.entity.Reply">
        update reply
        <set>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="correct != null">
                correct = #{correct,jdbcType=VARCHAR},
            </if>
            <if test="error != null">
                error = #{error,jdbcType=VARCHAR},
            </if>
            <if test="paperId != null">
                paper_id = #{paperId,jdbcType=INTEGER},
            </if>
            <if test="publishId != null">
                publish_id = #{publishId,jdbcType=INTEGER},
            </if>
            <if test="submitTs != null">
                submit_ts = #{submitTs,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.examination.entity.Reply">
    update reply
    set answer = #{answer,jdbcType=VARCHAR},
      correct = #{correct,jdbcType=VARCHAR},
      error = #{error,jdbcType=VARCHAR},
      paper_id = #{paperId,jdbcType=INTEGER},
      publish_id = #{publishId,jdbcType=INTEGER},
      submit_ts = #{submitTs,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>